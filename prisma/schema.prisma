// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

//bu kısım next auth user için
model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  posts         Post[]
}

model VerificationToken {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

//-------next auth END

//our data.......START

model Post {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  bandName    String //title
  publicId    String? //cloudinary için koyuyoruz.
  about       String?
  desc        String
  img         String?
  catName     String?
  category    Category? @relation(fields: [catName], references: [catName])
  author      User      @relation(fields: [authorEmail], references: [email])
  authorEmail String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt //updated ad prisma ozellıgı
}

model Category {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  catTitle String //classic rock
  catName  String   @unique //classic-rock
  posts    Post[]
  postIds  String[] @db.ObjectId
}
